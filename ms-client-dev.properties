server.port=${PORT:8007}
# Server eurka
eureka.client.service-url.defaultZone=${EUREKA_SERVER:http://localhost:8761/eureka}
eureka.client.register-with-eureka=true

# JPA
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=${DATA_BASE_LOYALTY_URL:jdbc:mariadb://localhost:3306/geoloyalty} 
spring.datasource.username=${DATA_BASE_LOYALTY_USER:root}
spring.datasource.password=${DATA_BASE_LOYALTY_PASS:geocom}
spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=DEBUG
# SWAGGER
springdoc.swagger-ui.path=/swagger-ui.html
# GU_ENTITIES
gu-entities.PhoneType.cell=CELL
gu-entities.PhoneType.catogory = PRIMARY

# SWAGGER
springdoc.swagger-ui.path=/swagger-ui.html

#Codigos de respuesta y mensajes
propeties.codes.ok=Accept
propeties.codes.code-ok=200
propeties.codes.card-exist=Tarjeta ya existente 
propeties.codes.code-card-exist=204
propeties.codes.card-not-exist=No existe la tarjeta
propeties.codes.code-card-not-exist=401
propeties.codes.client-not-found-by-card=No existe cliente asociado a la tarjeta 
propeties.codes.code-client-not-found-by-card=402
propeties.codes.card-exist-in-multiple-client=Error tarjeta asociada a varios clientes 
propeties.codes.code-card-exist-in-multiple-client=403
propeties.codes.client-not-has-cell=Cliente no posee un celular asociado
propeties.codes.code-client-not-has-cell=404
propeties.codes.card-account-exist=Ya posee una cuenta creada con esa tarjeta
propeties.codes.code-card-account-exist=201
propeties.codes.clients-not-exist=No existen clientes para los datos proporcionados
propeties.codes.code-clients-not-exist=900